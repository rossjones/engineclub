.. Engineclub documentation master file, created by
   sphinx-quickstart on Thu Feb 11 18:44:30 2010.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

======================================
Engineclub
======================================

.. rubric:: All about Engineclub.

Engineclub was started in January 2010 as part of the ALISS project for the National Health Service in Scotland.

See the:

- Blog for `ALISS Project`_ 
- Twitter `@ALISSproject`_
- `Github`_

.. _ALISS Project: http://www.aliss.scot.nhs.uk/
.. _@ALISSproject: http://twitter.com/alissproject
.. _Github: http://github.com/snowcloud/engineclub/

.. Contents:

There are five applications:

home
=========================

the home page for engineclub.org which will host information, demos etc
    
depot
=========================

storage of resource data, and services API, using a mix of mongodb and postgresql (for geoDjango location stuff).

.. toctree::
   :maxdepth: 2

   depot/api
   depot/data-model
    
enginecab
=========================

admin app for the engineclub


firebox
=========================

for data collection code

ecutils
=========================

for utility code


Engineclub is a `Django`_ project, and uses `MongoDB`_ for the main resource data.

.. _Django: http://djangoproject.com/
.. _MongoDB: http://mongodb.org/

=========================
Installation instructions
=========================

Currently, installation involves downloading the code from `Github`_, 
or better is to use Git to create a local repository so you can keep up to date with development::

    git clone http://github.com/snowcloud/engineclub.git

The requirements.txt file lists requirements for a working installation. You can use `Pip`_ to install these with::

    pip install -r requirements.txt

You will need a `Mongodb`_ database server, installed and running. The Django admin uses a relational database, but you can use SQLite, which is part of Python from v2.5. The default settings.py file will default to SQLite.

To customise settings, add your own file called settings_local.py. It will be imported at the end of settings.py on system startup.

Following installation, make sure you are in the installation directory, then you can do::

    cd ecengine
    ./manage.py syncdb --noinput

This will create the initial database and load an admin user from apps/aliss/fixtures/initial_data.json
You can then log in with username: admin and password: admin

.. _Pip: http://pip.openplans.org/


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`

Theme: `Nature <http://github.com/bartTC/sphinx-schemes>`_

